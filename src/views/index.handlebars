<h1 style="text-align: center;" class="mt-2">Lista de Productos sin Socket</h1>
<h2 style="text-align: center">Agregar un Producto</h2>

{{>form}}

<ul id="ulContainer" style="display: flex; justify-content: space-between; flex-wrap: wrap; width: 80%; position: relative; left: 10%;" >
  {{#each products as |product|}}
  <li id={{product._id}}>
    <div  class="card my-2 mx-2" style="width: 18rem; flex-grow: 1;">
      <img src="{{product.thumbnails}}" class="card-img-top" alt="Imagen ilustrativa" id="imageRealTime">
      <div class="card-body">
        <h5 class="card-title text-center" id="titleRealTime">{{product.title}}</h5>
        <p class="card-text text-center" id="descRealTime">{{product.desc}}</p>
        <p class="card-text text-center pb-2" id="priceRealTime">Price: ${{product.price}}</p>
        <div class="mx-2 mb-2 d-flex justify-content-around">
          <a href="#" class="btn btn-secondary">Buy</a>
          <a href="#" class="btn btn-danger" onclick='eliminateProduct("{{product._id}}")'>Delete</a>
        </div>
      </div>
    </div>
  </li>
  {{/each}}
</ul>

{{>pagination}}

<script>
  const formProduct = document.getElementById('formProducts')
  const divContainer = document.getElementById('ulContainer')
  
  formProduct.addEventListener('submit', async (event) => {
    event.preventDefault()
    event.stopPropagation()
    
    const inputTitle = document.getElementById('inputTitle').value
    const inputDescription = document.getElementById('inputDescription').value
    const inputPrice = document.getElementById('inputPrice').value
    const inputCode = document.getElementById('inputCode').value
    const inputStock = document.getElementById('inputStock').value
    const errorAlert = document.getElementById('errorAlert')
    const newProduct = {
        title: inputTitle,
        desc: inputDescription,
        price: inputPrice,
        code: inputCode,
        stock: inputStock
      }
    

    const response = await fetch('/api/products', {
      method: "POST",
      body: JSON.stringify(newProduct),
      headers: {
        'content-type': 'application/json'
      }
    })
    if(response.ok) {
      errorAlert.style.color = 'green'
      errorAlert.innerText = 'Producto creado con Ã©xito'
      const data = await response.json()

      let li = document.createElement('li')
      li.setAttribute ('id', data.payload._id)
      li.innerHTML = `<div  class="card my-2 mx-2" style="width: 18rem; flex-grow: 1;">
      <img src="${data.payload.thumbnails}" class="card-img-top" alt="Imagen ilustrativa" id="imageRealTime">
      <div class="card-body">
        <h5 class="card-title text-center" id="titleRealTime">${data.payload.title}</h5>
        <p class="card-text text-center" id="descRealTime">${data.payload.desc}</p>
        <p class="card-text text-center pb-2" id="priceRealTime">Price: $${data.payload.price}</p>
        <div class="mx-2 mb-2 d-flex justify-content-around">
          <a href="#" class="btn btn-secondary">Buy</a>
          <a href="#" class="btn btn-danger" onclick='eliminateProduct("${data.payload._id}")'>Delete</a>
        </div>
        </div>
        </div>`
      divContainer.appendChild(li)
      formProduct.reset()
    } else {
      const data = await response.json()
      errorAlert.style.color = 'red'
      errorAlert.innerText = data.error
    }   
  })

  async function eliminateProduct(id) {
    try {
      const response = await fetch('/api/products/'+id, {
      method: "DELETE"
    })
    const li = document.getElementById(id)
    li.remove()
    } catch (err) {
      return
    }
  }
</script>

